{"remainingRequest":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/src/views/Admins.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/src/views/Admins.vue","mtime":1600553567000},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/cache-loader/dist/cjs.js","mtime":1596790124748},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/babel-loader/lib/index.js","mtime":1596739166622},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/cache-loader/dist/cjs.js","mtime":1596790124748},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/vue-loader/lib/index.js","mtime":1596739192596}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from \"moment\";\nimport vSelect from \"vue-select\";\nexport default {\n  components: {\n    vSelect,\n  },\n  data() {\n    return {\n      admins: [],\n      toggleAdmin: [],\n      confirmToggle: false,\n    };\n  },\n  computed: {},\n  methods: {\n    openLoadingInDiv() {\n      this.$vs.loading({\n        container: \"#div-with-loading\",\n        scale: 0.6,\n      });\n    },\n    toggleStatus(firstname, status, id, index) {\n      let adminStatus = {\n        firstname: firstname,\n        id: id,\n        staus: status,\n      };\n      this.openLoadingInDiv();\n      this.$store\n        .dispatch(\"toggleAdminStatus\", adminStatus)\n        .then((resp) => {\n          this.$vs.notify({\n            color: \"success\",\n            title: \"Admin Status\",\n            text: \"Admin Status Changed Successfully!\",\n          });\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n        })\n        .catch((err) => {\n          this.admins[index].verified = !this.admins[index].verified;\n          // console.log(this.admins[index]);\n\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n          if (err.response) {\n            if (err.response.status == 400) {\n              //        console.log(err.response.data);\n              this.$vs.notify({\n                title: \"Change Admin Status\",\n                text: err.response.data,\n                color: \"danger\",\n              });\n            } else {\n              this.$vs.notify({\n                title: \"Change Admin Status\",\n                text: \"Unable to Change Admin Status!\",\n                color: \"danger\",\n              });\n            }\n          } else {\n            this.$vs.notify({\n              title: \"Change Admin Status\",\n              text: \"Unable to Change Admin Status!\",\n              color: \"danger\",\n            });\n          }\n          console.error(err);\n        });\n    },\n  },\n  mounted() {\n    moment().format();\n    this.openLoadingInDiv();\n    this.$store\n      .dispatch(\"getAllAdmins\")\n      .then((resp) => {\n        this.admins = resp.data;\n        // console.log(this.admins);\n        this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n      })\n      .catch((err) => {\n        this.$vs.notify({\n          title: \"Load Admin\",\n          text: \"Unable to Load list of Admin!\",\n          color: \"danger\",\n        });\n        this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n      });\n  },\n};\n",{"version":3,"sources":["Admins.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Admins.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"page-user-list\">\n    <vs-card class=\"p-3 pb-1\">\n      <div class=\"flex flex-wrap\">\n        <div class=\"w-full sm:w-1/2 md:w-1/2 lg:w-1/2 xl:w-1/2\">\n          <h5 class=\"m-0 pt-3\">Admins Account</h5>\n        </div>\n        <div class=\"w-full sm:w-1/2 md:w-1/2 lg:w-1/2 xl:w-1/2 text-right\">\n          <vs-button color=\"primary\" to=\"/create-admin-account\" type=\"filled\">Create Admin Account</vs-button>\n        </div>\n      </div>\n    </vs-card>\n    <vs-card class=\"p-3 pb-1 vs-con-loading__container\">\n      <vs-table id=\"div-with-loading\" search max-items=\"5\" pagination :data=\"admins\">\n        <template slot=\"thead\">\n          <!-- <vs-th sort-key=\"email\">Id</vs-th> -->\n          <vs-th>Id</vs-th>\n          <vs-th sort-key=\"createdAt\">Date Created</vs-th>\n          <vs-th sort-key=\"firstName\">Full Name</vs-th>\n          <vs-th>Email</vs-th>\n          <vs-th>Phone</vs-th>\n          <vs-th>Type</vs-th>\n          <vs-th>Action</vs-th>\n        </template>\n\n        <template slot-scope=\"{data}\">\n          <vs-tr :key=\"index\" v-for=\"(tr, index) in data\">\n            <vs-td>{{ index + 1 }}</vs-td>\n            <vs-td :data=\"tr.createdAt\">{{ tr.createdAt | formatDate }}</vs-td>\n            <vs-td :data=\"tr.firstName\">{{ tr.firstName }} {{ tr.lastName }}</vs-td>\n            <vs-td>{{tr.email}}</vs-td>\n            <vs-td>{{tr.phoneNumber}}</vs-td>\n            <vs-td :data=\"tr.type\">{{ tr.type }}</vs-td>\n            <vs-td>\n              <!-- <vs-button\n                :to=\"'/view-admin/'+ tr._id\"\n                color=\"primary\"\n                type=\"filled\"\n                size=\"small\"\n                class=\"mr-2 mb-2\"\n              >View</vs-button>-->\n              <!-- <vs-switch v-model=\"toggleAdmin[tr._id]\" /> -->\n\n              <vs-switch\n                color=\"dark\"\n                icon-pack=\"feather\"\n                vs-icon-on=\"icon-check-circle\"\n                vs-icon-off=\"icon-slash\"\n                v-model=\"tr.verified\"\n                @click=\"toggleStatus(tr.firstName,tr.verified, tr._id, index)\"\n              >\n                <span slot=\"on\">Active</span>\n                <span slot=\"off\">Inactive</span>\n              </vs-switch>\n\n              <!-- <vs-button color=\"dark\" size=\"small\">Change Status</vs-button> -->\n            </vs-td>\n          </vs-tr>\n        </template>\n      </vs-table>\n    </vs-card>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport vSelect from \"vue-select\";\nexport default {\n  components: {\n    vSelect,\n  },\n  data() {\n    return {\n      admins: [],\n      toggleAdmin: [],\n      confirmToggle: false,\n    };\n  },\n  computed: {},\n  methods: {\n    openLoadingInDiv() {\n      this.$vs.loading({\n        container: \"#div-with-loading\",\n        scale: 0.6,\n      });\n    },\n    toggleStatus(firstname, status, id, index) {\n      let adminStatus = {\n        firstname: firstname,\n        id: id,\n        staus: status,\n      };\n      this.openLoadingInDiv();\n      this.$store\n        .dispatch(\"toggleAdminStatus\", adminStatus)\n        .then((resp) => {\n          this.$vs.notify({\n            color: \"success\",\n            title: \"Admin Status\",\n            text: \"Admin Status Changed Successfully!\",\n          });\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n        })\n        .catch((err) => {\n          this.admins[index].verified = !this.admins[index].verified;\n          // console.log(this.admins[index]);\n\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n          if (err.response) {\n            if (err.response.status == 400) {\n              //        console.log(err.response.data);\n              this.$vs.notify({\n                title: \"Change Admin Status\",\n                text: err.response.data,\n                color: \"danger\",\n              });\n            } else {\n              this.$vs.notify({\n                title: \"Change Admin Status\",\n                text: \"Unable to Change Admin Status!\",\n                color: \"danger\",\n              });\n            }\n          } else {\n            this.$vs.notify({\n              title: \"Change Admin Status\",\n              text: \"Unable to Change Admin Status!\",\n              color: \"danger\",\n            });\n          }\n          console.error(err);\n        });\n    },\n  },\n  mounted() {\n    moment().format();\n    this.openLoadingInDiv();\n    this.$store\n      .dispatch(\"getAllAdmins\")\n      .then((resp) => {\n        this.admins = resp.data;\n        // console.log(this.admins);\n        this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n      })\n      .catch((err) => {\n        this.$vs.notify({\n          title: \"Load Admin\",\n          text: \"Unable to Load list of Admin!\",\n          color: \"danger\",\n        });\n        this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n      });\n  },\n};\n</script>\n\n<style lang=\"scss\">\n#page-user-list {\n  .user-list-filters {\n    .vs__actions {\n      position: absolute;\n      right: 0;\n      top: 50%;\n      transform: translateY(-58%);\n    }\n  }\n}\n</style>\n"]}]}