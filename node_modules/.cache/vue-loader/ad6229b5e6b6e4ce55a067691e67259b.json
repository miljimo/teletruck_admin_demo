{"remainingRequest":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/src/views/ChatComponents/ChatNavbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/src/views/ChatComponents/ChatNavbar.vue","mtime":1600553567000},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/cache-loader/dist/cjs.js","mtime":1596790124748},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/babel-loader/lib/index.js","mtime":1596739166622},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/cache-loader/dist/cjs.js","mtime":1596790124748},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/vue-loader/lib/index.js","mtime":1596739192596}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    },\n    isPinnedProp: {\n      type: Boolean,\n      required: true\n    },\n    isSidebarCollapsed: {\n      type: Boolean,\n      required: true\n    }\n  },\n  computed: {\n    isPinnedLocal: {\n      get() {\n        return this.isPinnedProp;\n      },\n      set(val) {\n        const chatData = this.$store.getters[\"chat/chatDataOfUser\"](\n          this.userId\n        );\n        if (chatData) {\n          const payload = { id: this.userId, value: val };\n          this.$store\n            .dispatch(\"chat/toggleIsPinned\", payload)\n            .then(() => {\n              this.$emit(\"toggleIsChatPinned\", val);\n            })\n            .catch(err => {\n              console.error(err);\n            });\n        } else {\n          this.$emit(\"toggleIsChatPinned\", val);\n        }\n      }\n    },\n    userDetails() {\n      return this.$store.getters[\"chat/contact\"](this.userId);\n    },\n    getStatusColor() {\n      return isActiveUser => {\n        const userStatus = this.getUserStatus(isActiveUser);\n\n        if (userStatus === \"online\") {\n          return \"success\";\n        } else if (userStatus === \"do not disturb\") {\n          return \"danger\";\n        } else if (userStatus === \"away\") {\n          return \"warning\";\n        } else {\n          return \"grey\";\n        }\n      };\n    }\n  },\n  methods: {\n    getUserStatus(isActiveUser) {\n      return isActiveUser\n        ? this.$store.state.AppActiveUser.status\n        : this.userDetails.status;\n    }\n  }\n};\n",{"version":3,"sources":["ChatNavbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatNavbar.vue","sourceRoot":"src/views/ChatComponents","sourcesContent":["<!-- =========================================================================================\n    File Name: ChatNavbar.vue\n    Description: Chat Application - Chat navbar\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <div v-if=\"userId != null\" class=\"chat__header\">\n    <vs-navbar class=\"p-4 flex navbar-custom\" color=\"white\" type=\"flat\">\n      <div class=\"relative flex mr-4\">\n        <feather-icon\n          icon=\"MenuIcon\"\n          class=\"mr-4 cursor-pointer\"\n          v-if=\"isSidebarCollapsed\"\n          @click.stop=\"$emit('openContactsSidebar')\"\n        />\n        <vs-avatar\n          class=\"m-0 border-2 border-solid border-white\"\n          size=\"40px\"\n          :src=\"userDetails.photoURL\"\n          @click.stop=\"$emit('showProfileSidebar', userId)\"\n        />\n        <div\n          class=\"h-3 w-3 border-white border border-solid rounded-full absolute right-0 bottom-0\"\n          :class=\"'bg-' + getStatusColor(false)\"\n        ></div>\n      </div>\n      <h6>{{ userDetails.displayName }}</h6>\n      <vs-spacer></vs-spacer>\n      <feather-icon\n        icon=\"StarIcon\"\n        class=\"cursor-pointer\"\n        :svgClasses=\"[{'text-warning stroke-current': isPinnedLocal}, 'w-6', 'h-6']\"\n        @click.stop=\"isPinnedLocal = !isPinnedLocal\"\n      ></feather-icon>\n    </vs-navbar>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    },\n    isPinnedProp: {\n      type: Boolean,\n      required: true\n    },\n    isSidebarCollapsed: {\n      type: Boolean,\n      required: true\n    }\n  },\n  computed: {\n    isPinnedLocal: {\n      get() {\n        return this.isPinnedProp;\n      },\n      set(val) {\n        const chatData = this.$store.getters[\"chat/chatDataOfUser\"](\n          this.userId\n        );\n        if (chatData) {\n          const payload = { id: this.userId, value: val };\n          this.$store\n            .dispatch(\"chat/toggleIsPinned\", payload)\n            .then(() => {\n              this.$emit(\"toggleIsChatPinned\", val);\n            })\n            .catch(err => {\n              console.error(err);\n            });\n        } else {\n          this.$emit(\"toggleIsChatPinned\", val);\n        }\n      }\n    },\n    userDetails() {\n      return this.$store.getters[\"chat/contact\"](this.userId);\n    },\n    getStatusColor() {\n      return isActiveUser => {\n        const userStatus = this.getUserStatus(isActiveUser);\n\n        if (userStatus === \"online\") {\n          return \"success\";\n        } else if (userStatus === \"do not disturb\") {\n          return \"danger\";\n        } else if (userStatus === \"away\") {\n          return \"warning\";\n        } else {\n          return \"grey\";\n        }\n      };\n    }\n  },\n  methods: {\n    getUserStatus(isActiveUser) {\n      return isActiveUser\n        ? this.$store.state.AppActiveUser.status\n        : this.userDetails.status;\n    }\n  }\n};\n</script>\n\n"]}]}