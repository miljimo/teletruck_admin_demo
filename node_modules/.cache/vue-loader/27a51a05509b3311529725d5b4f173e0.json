{"remainingRequest":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/src/views/Chat.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/src/views/Chat.vue","mtime":1600553567000},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/css-loader/index.js","mtime":1596790125351},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1596739192596},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/postcss-loader/src/index.js","mtime":1596739188142},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/sass-loader/dist/cjs.js","mtime":1596790186435},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/cache-loader/dist/cjs.js","mtime":1596790124748},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/vue-loader/lib/index.js","mtime":1596739192596}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"@/assets/scss/vuexy/apps/chat.scss\";\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoUA","file":"Chat.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div\n    id=\"chat-app\"\n    class=\"border border-solid d-theme-border-grey-light rounded relative overflow-hidden\"\n  >\n    <vs-sidebar\n      class=\"items-no-padding\"\n      parent=\"#chat-app\"\n      :click-not-close=\"clickNotClose\"\n      :hidden-background=\"clickNotClose\"\n      v-model=\"isChatSidebarActive\"\n      id=\"chat-list-sidebar\"\n    >\n      <!-- USER PROFILE SIDEBAR -->\n      <user-profile\n        :active=\"activeProfileSidebar\"\n        :userId=\"userProfileId\"\n        class=\"user-profile-container\"\n        :isLoggedInUser=\"isLoggedInUserProfileView\"\n        @closeProfileSidebar=\"closeProfileSidebar\"\n      ></user-profile>\n\n      <div class=\"chat__profile-search flex p-4\">\n        <div class=\"relative inline-flex\">\n          <vs-avatar\n            v-if=\"activeUser.photoURL\"\n            class=\"m-0 border-2 border-solid border-white\"\n            :src=\"activeUser.photoURL\"\n            size=\"40px\"\n            @click=\"showProfileSidebar(Number(activeUser.uid), true)\"\n          />\n          <div\n            class=\"h-3 w-3 border-white border border-solid rounded-full absolute right-0 bottom-0\"\n            :class=\"'bg-' + getStatusColor(true)\"\n          ></div>\n        </div>\n        <vs-input\n          icon-no-border\n          icon=\"icon-search\"\n          icon-pack=\"feather\"\n          class=\"w-full mx-5 input-rounded-full\"\n          placeholder=\"Search or start a new chat\"\n          v-model=\"searchQuery\"\n        />\n\n        <feather-icon\n          class=\"md:inline-flex lg:hidden -ml-3 cursor-pointer\"\n          icon=\"XIcon\"\n          @click=\"toggleChatSidebar(false)\"\n        />\n      </div>\n\n      <vs-divider class=\"d-theme-border-grey-light m-0\" />\n      <component\n        :is=\"scrollbarTag\"\n        class=\"chat-scroll-area pt-4\"\n        :settings=\"settings\"\n        :key=\"$vs.rtl\"\n      >\n        <!-- ACTIVE CHATS LIST -->\n        <div class=\"chat__chats-list mb-8\">\n          <h3 class=\"text-primary mb-5 px-4\">Chats</h3>\n          <ul class=\"chat__active-chats bordered-items\">\n            <li\n              class=\"cursor-pointer\"\n              v-for=\"(contact, index) in chatContacts\"\n              :key=\"index\"\n              @click=\"updateActiveChatUser(contact.uid)\"\n            >\n              <chat-contact\n                showLastMsg\n                :contact=\"contact\"\n                :lastMessaged=\"chatLastMessaged(contact.uid).time\"\n                :unseenMsg=\"chatUnseenMessages(contact.uid)\"\n                :isActiveChatUser=\"isActiveChatUser(contact.uid)\"\n              ></chat-contact>\n            </li>\n          </ul>\n        </div>\n\n        <!-- CONTACTS LIST -->\n        <div class=\"chat__contacts\">\n          <h3 class=\"text-primary mb-5 px-4\">Contacts</h3>\n          <ul class=\"chat__contacts bordered-items\">\n            <li\n              class=\"cursor-pointer\"\n              v-for=\"contact in contacts\"\n              :key=\"contact.uid\"\n              @click=\"updateActiveChatUser(contact.uid)\"\n            >\n              <chat-contact :contact=\"contact\"></chat-contact>\n            </li>\n          </ul>\n        </div>\n      </component>\n    </vs-sidebar>\n\n    <!-- RIGHT COLUMN -->\n    <div\n      class=\"chat__bg no-scroll-content chat-content-area border border-solid d-theme-border-grey-light border-t-0 border-r-0 border-b-0\"\n      :class=\"{'sidebar-spacer--wide': clickNotClose, 'flex items-center justify-center': activeChatUser === null}\"\n    >\n      <template v-if=\"activeChatUser\">\n        <div class=\"chat__navbar\">\n          <chat-navbar\n            :isSidebarCollapsed=\"!clickNotClose\"\n            :user-id=\"activeChatUser\"\n            :isPinnedProp=\"isChatPinned\"\n            @openContactsSidebar=\"toggleChatSidebar(true)\"\n            @showProfileSidebar=\"showProfileSidebar\"\n            @toggleIsChatPinned=\"toggleIsChatPinned\"\n          ></chat-navbar>\n        </div>\n        <component\n          :is=\"scrollbarTag\"\n          class=\"chat-content-scroll-area border border-solid d-theme-border-grey-light\"\n          :settings=\"settings\"\n          ref=\"chatLogPS\"\n          :key=\"$vs.rtl\"\n        >\n          <div class=\"chat__log\" ref=\"chatLog\">\n            <chat-log :userId=\"activeChatUser\" v-if=\"activeChatUser\"></chat-log>\n          </div>\n        </component>\n        <div class=\"chat__input flex p-4 bg-white\">\n          <vs-input\n            class=\"flex-1\"\n            placeholder=\"Type Your Message\"\n            v-model=\"typedMessage\"\n            @keyup.enter=\"sendMsg\"\n          />\n          <vs-button class=\"bg-primary-gradient ml-4\" type=\"filled\" @click=\"sendMsg\">Send</vs-button>\n        </div>\n      </template>\n      <template v-else>\n        <div class=\"flex flex-col items-center\">\n          <feather-icon\n            icon=\"MessageSquareIcon\"\n            class=\"mb-4 bg-white p-8 shadow-md rounded-full\"\n            svgClasses=\"w-16 h-16\"\n          ></feather-icon>\n          <h4\n            class=\"py-2 px-4 bg-white shadow-md rounded-full cursor-pointer\"\n            @click.stop=\"toggleChatSidebar(true)\"\n          >Start Conversation</h4>\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ChatContact from \"./ChatComponents/ChatContact.vue\";\nimport ChatLog from \"./ChatComponents/ChatLog.vue\";\nimport ChatNavbar from \"./ChatComponents/ChatNavbar.vue\";\nimport UserProfile from \"./ChatComponents/UserProfile.vue\";\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\nimport moduleChat from \"@/store/chat/moduleChat.js\";\n\nexport default {\n  data() {\n    return {\n      active: true,\n      isHidden: false,\n      searchContact: \"\",\n      activeProfileSidebar: false,\n      activeChatUser: null,\n      userProfileId: -1,\n      typedMessage: \"\",\n      isChatPinned: false,\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.7\n      },\n      clickNotClose: true,\n      isChatSidebarActive: true,\n      isLoggedInUserProfileView: false\n    };\n  },\n  watch: {\n    windowWidth() {\n      this.setSidebarWidth();\n    }\n  },\n  computed: {\n    chatLastMessaged() {\n      return userId => this.$store.getters[\"chat/chatLastMessaged\"](userId);\n    },\n    chatUnseenMessages() {\n      return userId => {\n        const unseenMsg = this.$store.getters[\"chat/chatUnseenMessages\"](\n          userId\n        );\n        if (unseenMsg) return unseenMsg;\n      };\n    },\n    activeUser() {\n      return this.$store.state.AppActiveUser;\n    },\n    getStatusColor() {\n      return isActiveUser => {\n        const userStatus = this.getUserStatus(isActiveUser);\n\n        if (userStatus === \"online\") {\n          return \"success\";\n        } else if (userStatus === \"do not disturb\") {\n          return \"danger\";\n        } else if (userStatus === \"away\") {\n          return \"warning\";\n        } else {\n          return \"grey\";\n        }\n      };\n    },\n    chatContacts() {\n      return this.$store.getters[\"chat/chatContacts\"];\n    },\n    contacts() {\n      return this.$store.getters[\"chat/contacts\"];\n    },\n    searchQuery: {\n      get() {\n        return this.$store.state.chat.chatSearchQuery;\n      },\n      set(val) {\n        this.$store.dispatch(\"chat/setChatSearchQuery\", val);\n      }\n    },\n    scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    },\n    isActiveChatUser() {\n      return userId => userId === this.activeChatUser;\n    },\n    windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  methods: {\n    getUserStatus(isActiveUser) {\n      // return \"active\"\n      return isActiveUser\n        ? this.$store.state.AppActiveUser.status\n        : this.contacts[this.activeChatUser].status;\n    },\n    closeProfileSidebar(value) {\n      this.activeProfileSidebar = value;\n    },\n    updateActiveChatUser(contactId) {\n      this.activeChatUser = contactId;\n      if (this.$store.getters[\"chat/chatDataOfUser\"](this.activeChatUser)) {\n        this.$store.dispatch(\"chat/markSeenAllMessages\", contactId);\n      }\n      const chatData = this.$store.getters[\"chat/chatDataOfUser\"](\n        this.activeChatUser\n      );\n      if (chatData) this.isChatPinned = chatData.isPinned;\n      else this.isChatPinned = false;\n      this.toggleChatSidebar();\n      this.typedMessage = \"\";\n    },\n    showProfileSidebar(userId, openOnLeft = false) {\n      this.userProfileId = userId;\n      this.isLoggedInUserProfileView = openOnLeft;\n      this.activeProfileSidebar = !this.activeProfileSidebar;\n    },\n    sendMsg() {\n      if (!this.typedMessage) return;\n      const payload = {\n        isPinned: this.isChatPinned,\n        msg: {\n          textContent: this.typedMessage,\n          time: String(new Date()),\n          isSent: true,\n          isSeen: false\n        },\n        id: this.activeChatUser\n      };\n      this.$store.dispatch(\"chat/sendChatMessage\", payload);\n      this.typedMessage = \"\";\n\n      const scroll_el = this.$refs.chatLogPS.$el || this.$refs.chatLogPS;\n      scroll_el.scrollTop = this.$refs.chatLog.scrollHeight;\n    },\n    toggleIsChatPinned(value) {\n      this.isChatPinned = value;\n    },\n    setSidebarWidth() {\n      if (this.windowWidth < 1200) {\n        this.isChatSidebarActive = this.clickNotClose = false;\n      } else {\n        this.isChatSidebarActive = this.clickNotClose = true;\n      }\n    },\n    toggleChatSidebar(value = false) {\n      if (!value && this.clickNotClose) return;\n      this.isChatSidebarActive = value;\n    }\n  },\n  components: {\n    VuePerfectScrollbar,\n    ChatContact,\n    UserProfile,\n    ChatNavbar,\n    ChatLog\n  },\n  created() {\n    this.$store.registerModule(\"chat\", moduleChat);\n    this.$store.dispatch(\"chat/fetchContacts\");\n    this.$store.dispatch(\"chat/fetchChatContacts\");\n    this.$store.dispatch(\"chat/fetchChats\");\n    this.setSidebarWidth();\n  },\n  beforeDestroy() {\n    this.$store.unregisterModule(\"chat\");\n  },\n  mounted() {\n    this.$store.dispatch(\"chat/setChatSearchQuery\", \"\");\n  }\n};\n</script>\n\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuexy/apps/chat.scss\";\n</style>\n"]}]}