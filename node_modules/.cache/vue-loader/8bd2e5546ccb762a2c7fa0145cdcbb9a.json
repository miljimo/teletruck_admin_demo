{"remainingRequest":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/src/views/Notifications.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/src/views/Notifications.vue","mtime":1600553567000},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/cache-loader/dist/cjs.js","mtime":1596790124748},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/babel-loader/lib/index.js","mtime":1596739166622},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/cache-loader/dist/cjs.js","mtime":1596790124748},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Baby Diary Admin/node_modules/vue-loader/lib/index.js","mtime":1596739192596}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      Notifications: [],\n      notificationPopUp: false,\n      prevNotif: {},\n      churchEmail: \"\",\n    };\n  },\n  mounted() {\n    this.openLoadingInDiv();\n    this.getNotifications();\n  },\n  methods: {\n    clearNotification(id) {\n      this.notificationPopUp = false;\n      this.openLoadingInDiv();\n      this.$store\n        .dispatch(\"clearNotification\", id)\n        .then((resp) => {\n          //   console.log(resp);\n          this.getNotifications();\n          this.$vs.notify({\n            title: \"Clear Notification\",\n            text: \"Notification Cleared\",\n            color: \"success\",\n          });\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n        })\n        .catch((err) => {\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n          if (err.response) {\n            if (err.response.status == 400) {\n              console.log(err.response.data);\n              this.$vs.notify({\n                title: \"Clear Notification\",\n                text: err.response.data,\n                color: \"warning\",\n              });\n            } else {\n              this.$vs.notify({\n                title: \"Clear Notification\",\n                text: \"Unable to Clear Notification, try again!\",\n                color: \"warning\",\n              });\n            }\n          } else {\n            this.$vs.notify({\n              title: \"Clear Notification\",\n              text: \"Unable to Clear Notification, try again!\",\n              color: \"warning\",\n            });\n          }\n        });\n    },\n    clearAll() {\n      this.openLoadingInDiv();\n      this.$store\n        .dispatch(\"clearNotifications\")\n        .then((resp) => {\n          this.Notifications = [];\n          //   console.log(resp);\n          this.$vs.notify({\n            title: \"Clear Notifications\",\n            text: \"All Notifications Cleared\",\n            color: \"success\",\n          });\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n        })\n        .catch((err) => {\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n          if (err.response) {\n            if (err.response.status == 400) {\n              console.log(err.response.data);\n              this.$vs.notify({\n                title: \"Clear Notifications\",\n                text: err.response.data,\n                color: \"warning\",\n              });\n            } else {\n              this.$vs.notify({\n                title: \"Clear Notifications\",\n                text: \"Unable to Clear Notifications, try again!\",\n                color: \"warning\",\n              });\n            }\n          } else {\n            this.$vs.notify({\n              title: \"Clear Notifications\",\n              text: \"Unable to Clear Notifications, try again!\",\n              color: \"warning\",\n            });\n          }\n        });\n    },\n    elapsedTime(startTime) {\n      const x = new Date(startTime);\n      const now = new Date();\n      let timeDiff = now - x;\n      timeDiff /= 1000;\n\n      const seconds = Math.round(timeDiff);\n      timeDiff = Math.floor(timeDiff / 60);\n\n      const minutes = Math.round(timeDiff % 60);\n      timeDiff = Math.floor(timeDiff / 60);\n\n      const hours = Math.round(timeDiff % 24);\n      timeDiff = Math.floor(timeDiff / 24);\n\n      const days = Math.round(timeDiff % 365);\n      timeDiff = Math.floor(timeDiff / 365);\n\n      const years = timeDiff;\n\n      if (years > 0) {\n        return `${years + (years > 1 ? \" Years \" : \" Year \")}ago`;\n      } else if (days > 0) {\n        return `${days + (days > 1 ? \" Days \" : \" Day \")}ago`;\n      } else if (hours > 0) {\n        return `${hours + (hours > 1 ? \" Hrs \" : \" Hour \")}ago`;\n      } else if (minutes > 0) {\n        return `${minutes + (minutes > 1 ? \" Mins \" : \" Min \")}ago`;\n      } else if (seconds > 0) {\n        return seconds + (seconds > 1 ? \" sec ago\" : \"just now\");\n      }\n\n      return \"Just Now\";\n    },\n    ReadNotification(ntf, index) {\n      this.notificationPopUp = true;\n      this.churchEmail = this.Notifications[index].churchId.email;\n      this.prevNotif = ntf;\n      this.Notifications[index].read.push(this.prevNotif._id);\n      this.readReceipt(this.prevNotif._id);\n    },\n    readReceipt(id) {\n      this.$store\n        .dispatch(\"readNotification\", id)\n        .then((resp) => {})\n        .catch((err) => {});\n    },\n    getNotifications() {\n      this.$store\n        .dispatch(\"getNotifications\")\n        .then((resp) => {\n          this.Notifications = resp.data.data;\n\n          console.log(this.Notifications);\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n        })\n        .catch((err) => {\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n          if (err.response) {\n            if (err.response.status == 400) {\n              console.log(err.response.data);\n              this.$vs.notify({\n                title: \"Load Notifications\",\n                text: err.response.data,\n                color: \"warning\",\n              });\n            } else {\n              this.$vs.notify({\n                title: \"Load Notifications\",\n                text: \"Unable to Load Notifications, try again!\",\n                color: \"warning\",\n              });\n            }\n          } else {\n            this.$vs.notify({\n              title: \"Load Notifications\",\n              text: \"Unable to Load Notifications, try again!\",\n              color: \"warning\",\n            });\n          }\n        });\n    },\n    openLoadingInDiv() {\n      this.$vs.loading({\n        container: \"#div-with-loading\",\n        scale: 0.6,\n      });\n    },\n  },\n};\n",{"version":3,"sources":["Notifications.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"Notifications.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"vx-card\" style=\"max-width: 600px; margin: 0 auto;\">\n      <div class=\"vx-card__header\">\n        <div class=\"vx-card__title\" style=\"width: 100%\">\n          <div class=\"vs-row w-full\">\n            <div class=\"vs-col sm:w-1/2 md:w-3/4 lg:w-3/4 xl:w-3/4\">\n              <h4 class>Notifications</h4>\n            </div>\n            <div class=\"vs-col sm:w-1/2 md:w-1/2 lg:w-1/4 xl:w-1/4\">\n              <!-- <vs-button color=\"primary\" icon=\"clear\" icon-before @click=\"clearAll()\">Clear All</vs-button> -->\n            </div>\n          </div>\n          <!---->\n        </div>\n        <!---->\n      </div>\n      <div\n        class=\"vx-card__collapsible-content vs-con-loading__container\"\n        id=\"div-with-loading\"\n        style=\"min-height: 500px\"\n      >\n        <div class=\"vx-card__body\">\n          <ul class=\"vx-timeline\">\n            <li\n              class=\"cursor-pointer\"\n              @click=\"ReadNotification(ntf,index)\"\n              v-for=\"(ntf,index) in Notifications\"\n              :key=\"index\"\n            >\n              <div class=\"timeline-info\">\n                <!-- :class=\"[ntf.read.length < 1 ? 'text-primary' : '', 'font-semibold']\" -->\n                <p>{{ntf.title | truncate(40) }}</p>\n                <small v-if=\"ntf\">{{churchEmail }}</small>\n              </div>\n              <small class=\"text-grey activity-e-time\">{{ elapsedTime(ntf.createdAt)}}</small>\n              <hr class=\"opacity-25 my-5\" />\n            </li>\n          </ul>\n        </div>\n        <!---->\n      </div>\n      <div class=\"vx-card__code-container collapsed\" style=\"max-height: 0px; display: none;\">\n        <div class=\"code-content\">\n          <pre class=\"language-markup\"><code class=\"language-markup\"></code></pre>\n        </div>\n      </div>\n    </div>\n\n    <vs-popup\n      v-if=\"prevNotif\"\n      class=\"holamundo\"\n      :title=\"churchEmail\"\n      :active.sync=\"notificationPopUp\"\n    >\n      <p class=\"mt-1 mb-1\">{{prevNotif.title}}</p>\n      <p class=\"italic text-sm mb-5 mt-4\">{{ elapsedTime(prevNotif.createdAt) }}</p>\n      <vs-button\n        color=\"primary\"\n        type=\"border\"\n        icon=\"clear\"\n        icon-before\n        @click=\"clearNotification(prevNotif._id)\"\n      >Clear</vs-button>\n    </vs-popup>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      Notifications: [],\n      notificationPopUp: false,\n      prevNotif: {},\n      churchEmail: \"\",\n    };\n  },\n  mounted() {\n    this.openLoadingInDiv();\n    this.getNotifications();\n  },\n  methods: {\n    clearNotification(id) {\n      this.notificationPopUp = false;\n      this.openLoadingInDiv();\n      this.$store\n        .dispatch(\"clearNotification\", id)\n        .then((resp) => {\n          //   console.log(resp);\n          this.getNotifications();\n          this.$vs.notify({\n            title: \"Clear Notification\",\n            text: \"Notification Cleared\",\n            color: \"success\",\n          });\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n        })\n        .catch((err) => {\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n          if (err.response) {\n            if (err.response.status == 400) {\n              console.log(err.response.data);\n              this.$vs.notify({\n                title: \"Clear Notification\",\n                text: err.response.data,\n                color: \"warning\",\n              });\n            } else {\n              this.$vs.notify({\n                title: \"Clear Notification\",\n                text: \"Unable to Clear Notification, try again!\",\n                color: \"warning\",\n              });\n            }\n          } else {\n            this.$vs.notify({\n              title: \"Clear Notification\",\n              text: \"Unable to Clear Notification, try again!\",\n              color: \"warning\",\n            });\n          }\n        });\n    },\n    clearAll() {\n      this.openLoadingInDiv();\n      this.$store\n        .dispatch(\"clearNotifications\")\n        .then((resp) => {\n          this.Notifications = [];\n          //   console.log(resp);\n          this.$vs.notify({\n            title: \"Clear Notifications\",\n            text: \"All Notifications Cleared\",\n            color: \"success\",\n          });\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n        })\n        .catch((err) => {\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n          if (err.response) {\n            if (err.response.status == 400) {\n              console.log(err.response.data);\n              this.$vs.notify({\n                title: \"Clear Notifications\",\n                text: err.response.data,\n                color: \"warning\",\n              });\n            } else {\n              this.$vs.notify({\n                title: \"Clear Notifications\",\n                text: \"Unable to Clear Notifications, try again!\",\n                color: \"warning\",\n              });\n            }\n          } else {\n            this.$vs.notify({\n              title: \"Clear Notifications\",\n              text: \"Unable to Clear Notifications, try again!\",\n              color: \"warning\",\n            });\n          }\n        });\n    },\n    elapsedTime(startTime) {\n      const x = new Date(startTime);\n      const now = new Date();\n      let timeDiff = now - x;\n      timeDiff /= 1000;\n\n      const seconds = Math.round(timeDiff);\n      timeDiff = Math.floor(timeDiff / 60);\n\n      const minutes = Math.round(timeDiff % 60);\n      timeDiff = Math.floor(timeDiff / 60);\n\n      const hours = Math.round(timeDiff % 24);\n      timeDiff = Math.floor(timeDiff / 24);\n\n      const days = Math.round(timeDiff % 365);\n      timeDiff = Math.floor(timeDiff / 365);\n\n      const years = timeDiff;\n\n      if (years > 0) {\n        return `${years + (years > 1 ? \" Years \" : \" Year \")}ago`;\n      } else if (days > 0) {\n        return `${days + (days > 1 ? \" Days \" : \" Day \")}ago`;\n      } else if (hours > 0) {\n        return `${hours + (hours > 1 ? \" Hrs \" : \" Hour \")}ago`;\n      } else if (minutes > 0) {\n        return `${minutes + (minutes > 1 ? \" Mins \" : \" Min \")}ago`;\n      } else if (seconds > 0) {\n        return seconds + (seconds > 1 ? \" sec ago\" : \"just now\");\n      }\n\n      return \"Just Now\";\n    },\n    ReadNotification(ntf, index) {\n      this.notificationPopUp = true;\n      this.churchEmail = this.Notifications[index].churchId.email;\n      this.prevNotif = ntf;\n      this.Notifications[index].read.push(this.prevNotif._id);\n      this.readReceipt(this.prevNotif._id);\n    },\n    readReceipt(id) {\n      this.$store\n        .dispatch(\"readNotification\", id)\n        .then((resp) => {})\n        .catch((err) => {});\n    },\n    getNotifications() {\n      this.$store\n        .dispatch(\"getNotifications\")\n        .then((resp) => {\n          this.Notifications = resp.data.data;\n\n          console.log(this.Notifications);\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n        })\n        .catch((err) => {\n          this.$vs.loading.close(\"#div-with-loading > .con-vs-loading\");\n          if (err.response) {\n            if (err.response.status == 400) {\n              console.log(err.response.data);\n              this.$vs.notify({\n                title: \"Load Notifications\",\n                text: err.response.data,\n                color: \"warning\",\n              });\n            } else {\n              this.$vs.notify({\n                title: \"Load Notifications\",\n                text: \"Unable to Load Notifications, try again!\",\n                color: \"warning\",\n              });\n            }\n          } else {\n            this.$vs.notify({\n              title: \"Load Notifications\",\n              text: \"Unable to Load Notifications, try again!\",\n              color: \"warning\",\n            });\n          }\n        });\n    },\n    openLoadingInDiv() {\n      this.$vs.loading({\n        container: \"#div-with-loading\",\n        scale: 0.6,\n      });\n    },\n  },\n};\n</script>\n        "]}]}