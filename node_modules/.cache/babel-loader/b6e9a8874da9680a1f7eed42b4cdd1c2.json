{"remainingRequest":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Teletruck Admin/node_modules/babel-loader/lib/index.js!/Users/adeniranopeyemi/Documents/Horpey/Projects/Teletruck Admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/adeniranopeyemi/Documents/Horpey/Projects/Teletruck Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adeniranopeyemi/Documents/Horpey/Projects/Teletruck Admin/src/layouts/components/navbar/components/NotificationDropDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Teletruck Admin/src/layouts/components/navbar/components/NotificationDropDown.vue","mtime":1619954016683},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Teletruck Admin/node_modules/cache-loader/dist/cjs.js","mtime":1596790124748},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Teletruck Admin/node_modules/babel-loader/lib/index.js","mtime":1596739166622},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Teletruck Admin/node_modules/cache-loader/dist/cjs.js","mtime":1596790124748},{"path":"/Users/adeniranopeyemi/Documents/Horpey/Projects/Teletruck Admin/node_modules/vue-loader/lib/index.js","mtime":1596739192596}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\nexport default {\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  data: function data() {\n    return {\n      unreadNotifications: [],\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.6\n      }\n    };\n  },\n  computed: {\n    scrollbarTag: function scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    }\n  },\n  mounted: function mounted() {\n    this.getNotifications();\n  },\n  methods: {\n    getNotifications: function getNotifications() {\n      var _this = this;\n\n      this.$store.dispatch(\"getNotifications\").then(function (resp) {\n        _this.unreadNotifications = resp.data.data;\n        console.log(_this.unreadNotifications);\n      }).catch(function (err) {});\n    },\n    elapsedTime: function elapsedTime(startTime) {\n      var x = new Date(startTime);\n      var now = new Date();\n      var timeDiff = now - x;\n      timeDiff /= 1000;\n      var seconds = Math.round(timeDiff);\n      timeDiff = Math.floor(timeDiff / 60);\n      var minutes = Math.round(timeDiff % 60);\n      timeDiff = Math.floor(timeDiff / 60);\n      var hours = Math.round(timeDiff % 24);\n      timeDiff = Math.floor(timeDiff / 24);\n      var days = Math.round(timeDiff % 365);\n      timeDiff = Math.floor(timeDiff / 365);\n      var years = timeDiff;\n\n      if (years > 0) {\n        return \"\".concat(years + (years > 1 ? \" Years \" : \" Year \"), \"ago\");\n      } else if (days > 0) {\n        return \"\".concat(days + (days > 1 ? \" Days \" : \" Day \"), \"ago\");\n      } else if (hours > 0) {\n        return \"\".concat(hours + (hours > 1 ? \" Hrs \" : \" Hour \"), \"ago\");\n      } else if (minutes > 0) {\n        return \"\".concat(minutes + (minutes > 1 ? \" Mins \" : \" Min \"), \"ago\");\n      } else if (seconds > 0) {\n        return seconds + (seconds > 1 ? \" sec ago\" : \"just now\");\n      }\n\n      return \"Just Now\";\n    },\n    // Method for creating dummy notification time\n    randomDate: function randomDate(_ref) {\n      var hr = _ref.hr,\n          min = _ref.min,\n          sec = _ref.sec;\n      var date = new Date();\n      if (hr) date.setHours(date.getHours() - hr);\n      if (min) date.setMinutes(date.getMinutes() - min);\n      if (sec) date.setSeconds(date.getSeconds() - sec);\n      return date;\n    }\n  }\n};",{"version":3,"sources":["NotificationDropDown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,OAAA,mBAAA,MAAA,uBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,mBAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,mBAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA;AACA,QAAA,kBAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA;AAFA;AAFA,KAAA;AAOA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,YAAA;AACA;AAHA,GAbA;AAkBA,EAAA,OAlBA,qBAkBA;AACA,SAAA,gBAAA;AACA,GApBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AAAA;;AACA,WAAA,MAAA,CACA,QADA,CACA,kBADA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,mBAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,mBAAA;AACA,OALA,EAMA,KANA,CAMA,UAAA,GAAA,EAAA,CAAA,CANA;AAOA,KATA;AAUA,IAAA,WAVA,uyBAAA,KAAA,IAAA,KAAA,GAAA,CAAA,GAAA,SAAA,GAAA,QAAA,CAAA;AACA,OAFA,MAEA,IAAA,IAAA,GAAA,CAAA,EAAA;AACA,yBAAA,IAAA,IAAA,IAAA,GAAA,CAAA,GAAA,QAAA,GAAA,OAAA,CAAA;AACA,OAFA,MAEA,IAAA,KAAA,GAAA,CAAA,EAAA;AACA,yBAAA,KAAA,IAAA,KAAA,GAAA,CAAA,GAAA,OAAA,GAAA,QAAA,CAAA;AACA,OAFA,MAEA,IAAA,OAAA,GAAA,CAAA,EAAA;AACA,yBAAA,OAAA,IAAA,OAAA,GAAA,CAAA,GAAA,QAAA,GAAA,OAAA,CAAA;AACA,OAFA,MAEA,IAAA,OAAA,GAAA,CAAA,EAAA;AACA,eAAA,OAAA,IAAA,OAAA,GAAA,CAAA,GAAA,UAAA,GAAA,UAAA,CAAA;AACA;;AAEA,aAAA,UAAA;AACA,KA3CA;AA4CA;AACA,IAAA,UA7CA,4BA6CA;AAAA,UAAA,EAAA,QAAA,EAAA;AAAA,UAAA,GAAA,QAAA,GAAA;AAAA,UAAA,GAAA,QAAA,GAAA;AACA,UAAA,IAAA,GAAA,IAAA,IAAA,EAAA;AAEA,UAAA,EAAA,EAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,QAAA,KAAA,EAAA;AACA,UAAA,GAAA,EAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA;AACA,UAAA,GAAA,EAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA;AAEA,aAAA,IAAA;AACA;AArDA;AArBA,CAAA","sourcesContent":["<template>\n  <!-- NOTIFICATIONS -->\n  <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\n    <feather-icon\n      icon=\"BellIcon\"\n      class=\"cursor-pointer mt-1 sm:mr-6 mr-2\"\n      :badge=\"unreadNotifications.length\"\n    />\n\n    <vs-dropdown-menu\n      class=\"notification-dropdown dropdown-custom vx-navbar-dropdown\"\n    >\n      <div class=\"notification-top text-center p-5 bg-primary text-white\">\n        <h3 class=\"text-white\">{{ unreadNotifications.length }} New</h3>\n        <p class=\"opacity-75\">App Notifications</p>\n      </div>\n\n      <component\n        :is=\"scrollbarTag\"\n        ref=\"mainSidebarPs\"\n        class=\"scroll-area--nofications-dropdown p-0 mb-10\"\n        :settings=\"settings\"\n        :key=\"$vs.rtl\"\n      >\n        <ul class=\"bordered-items\">\n          <li\n            v-for=\"(ntf, index) in unreadNotifications\"\n            :key=\"index\"\n            @click=\"$router.push('/notifications')\"\n            v-if=\"index < 5\"\n            class=\"flex justify-between px-4 py-4 notification cursor-pointer\"\n          >\n            <div class=\"flex items-start\">\n              <feather-icon\n                :icon=\"ntf.icon\"\n                :svgClasses=\"[\n                  `text-${ntf.category}`,\n                  'stroke-current mr-1 h-6 w-6',\n                ]\"\n              ></feather-icon>\n              <div class=\"mx-2\">\n                <span\n                  class=\"font-medium block notification-title\"\n                  :class=\"[`text-${ntf.category}`]\"\n                  >{{ ntf.title | truncate(35) }}</span\n                >\n                <small>{{ ntf.churchId.email }}</small>\n              </div>\n            </div>\n            <small class=\"mt-1 whitespace-no-wrap\">{{\n              elapsedTime(ntf.createdAt)\n            }}</small>\n          </li>\n        </ul>\n      </component>\n\n      <div\n        class=\"checkout-footer fixed bottom-0 rounded-b-lg text-primary w-full p-2 font-semibold text-center border border-b-0 border-l-0 border-r-0 border-solid d-theme-border-grey-light cursor-pointer\"\n        @click=\"$router.push('/notifications')\"\n      >\n        <span>View All Notifications</span>\n      </div>\n    </vs-dropdown-menu>\n  </vs-dropdown>\n</template>\n\n<script>\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\n\nexport default {\n  components: {\n    VuePerfectScrollbar,\n  },\n  data() {\n    return {\n      unreadNotifications: [],\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.6,\n      },\n    };\n  },\n  computed: {\n    scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    },\n  },\n  mounted() {\n    this.getNotifications();\n  },\n  methods: {\n    getNotifications() {\n      this.$store\n        .dispatch(\"getNotifications\")\n        .then((resp) => {\n          this.unreadNotifications = resp.data.data;\n          console.log(this.unreadNotifications);\n        })\n        .catch((err) => {});\n    },\n    elapsedTime(startTime) {\n      const x = new Date(startTime);\n      const now = new Date();\n      let timeDiff = now - x;\n      timeDiff /= 1000;\n\n      const seconds = Math.round(timeDiff);\n      timeDiff = Math.floor(timeDiff / 60);\n\n      const minutes = Math.round(timeDiff % 60);\n      timeDiff = Math.floor(timeDiff / 60);\n\n      const hours = Math.round(timeDiff % 24);\n      timeDiff = Math.floor(timeDiff / 24);\n\n      const days = Math.round(timeDiff % 365);\n      timeDiff = Math.floor(timeDiff / 365);\n\n      const years = timeDiff;\n\n      if (years > 0) {\n        return `${years + (years > 1 ? \" Years \" : \" Year \")}ago`;\n      } else if (days > 0) {\n        return `${days + (days > 1 ? \" Days \" : \" Day \")}ago`;\n      } else if (hours > 0) {\n        return `${hours + (hours > 1 ? \" Hrs \" : \" Hour \")}ago`;\n      } else if (minutes > 0) {\n        return `${minutes + (minutes > 1 ? \" Mins \" : \" Min \")}ago`;\n      } else if (seconds > 0) {\n        return seconds + (seconds > 1 ? \" sec ago\" : \"just now\");\n      }\n\n      return \"Just Now\";\n    },\n    // Method for creating dummy notification time\n    randomDate({ hr, min, sec }) {\n      const date = new Date();\n\n      if (hr) date.setHours(date.getHours() - hr);\n      if (min) date.setMinutes(date.getMinutes() - min);\n      if (sec) date.setSeconds(date.getSeconds() - sec);\n\n      return date;\n    },\n  },\n};\n</script>\n\n"],"sourceRoot":"src/layouts/components/navbar/components"}]}