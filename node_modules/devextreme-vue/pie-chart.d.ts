/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import PieChart, { IOptions } from "devextreme/viz/pie_chart";
declare type AccessibleOptions = Pick<IOptions, "adaptiveLayout" | "animation" | "centerTemplate" | "commonSeriesSettings" | "customizeLabel" | "customizePoint" | "dataSource" | "diameter" | "disabled" | "elementAttr" | "export" | "innerRadius" | "legend" | "loadingIndicator" | "margin" | "minDiameter" | "onDisposing" | "onDone" | "onDrawn" | "onExported" | "onExporting" | "onFileSaving" | "onIncidentOccurred" | "onInitialized" | "onLegendClick" | "onOptionChanged" | "onPointClick" | "onPointHoverChanged" | "onPointSelectionChanged" | "onTooltipHidden" | "onTooltipShown" | "palette" | "paletteExtensionMode" | "pathModified" | "pointSelectionMode" | "redrawOnResize" | "resolveLabelOverlapping" | "rtlEnabled" | "segmentsDirection" | "series" | "seriesTemplate" | "size" | "sizeGroup" | "startAngle" | "theme" | "title" | "tooltip" | "type">;
interface DxPieChart extends AccessibleOptions {
    readonly instance?: PieChart;
}
declare const DxPieChart: VueType.VueConstructor<{
    instance: PieChart;
} & {
    adaptiveLayout: any;
    animation: any;
    centerTemplate: unknown;
    commonSeriesSettings: any;
    customizeLabel: Function;
    customizePoint: Function;
    dataSource: any;
    diameter: number;
    disabled: boolean;
    elementAttr: any;
    export: any;
    innerRadius: number;
    legend: any;
    loadingIndicator: any;
    margin: any;
    minDiameter: number;
    onDisposing: Function;
    onDone: Function;
    onDrawn: Function;
    onExported: Function;
    onExporting: Function;
    onFileSaving: Function;
    onIncidentOccurred: Function;
    onInitialized: Function;
    onLegendClick: TimerHandler;
    onOptionChanged: Function;
    onPointClick: TimerHandler;
    onPointHoverChanged: Function;
    onPointSelectionChanged: Function;
    onTooltipHidden: Function;
    onTooltipShown: Function;
    palette: string | unknown[];
    paletteExtensionMode: string;
    pathModified: boolean;
    pointSelectionMode: string;
    redrawOnResize: boolean;
    resolveLabelOverlapping: string;
    rtlEnabled: boolean;
    segmentsDirection: string;
    series: any;
    seriesTemplate: any;
    size: any;
    sizeGroup: string;
    startAngle: number;
    theme: string;
    title: any;
    tooltip: any;
    type: string;
} & VueType.default>;
declare const DxAdaptiveLayout: any;
declare const DxAnimation: any;
declare const DxArgumentFormat: any;
declare const DxBorder: any;
declare const DxCommonSeriesSettings: any;
declare const DxConnector: any;
declare const DxExport: any;
declare const DxFont: any;
declare const DxFormat: any;
declare const DxHatching: any;
declare const DxHoverStyle: any;
declare const DxLabel: any;
declare const DxLegend: any;
declare const DxLegendBorder: any;
declare const DxLegendTitle: any;
declare const DxLegendTitleSubtitle: any;
declare const DxLoadingIndicator: any;
declare const DxMargin: any;
declare const DxPieChartTitle: any;
declare const DxPieChartTitleSubtitle: any;
declare const DxSelectionStyle: any;
declare const DxSeries: any;
declare const DxSeriesBorder: any;
declare const DxSeriesTemplate: any;
declare const DxShadow: any;
declare const DxSize: any;
declare const DxSmallValuesGrouping: any;
declare const DxSubtitle: any;
declare const DxTitle: any;
declare const DxTooltip: any;
declare const DxTooltipBorder: any;
export default DxPieChart;
export { DxPieChart, DxAdaptiveLayout, DxAnimation, DxArgumentFormat, DxBorder, DxCommonSeriesSettings, DxConnector, DxExport, DxFont, DxFormat, DxHatching, DxHoverStyle, DxLabel, DxLegend, DxLegendBorder, DxLegendTitle, DxLegendTitleSubtitle, DxLoadingIndicator, DxMargin, DxPieChartTitle, DxPieChartTitleSubtitle, DxSelectionStyle, DxSeries, DxSeriesBorder, DxSeriesTemplate, DxShadow, DxSize, DxSmallValuesGrouping, DxSubtitle, DxTitle, DxTooltip, DxTooltipBorder };
