/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import TreeMap, { IOptions } from "devextreme/viz/tree_map";
declare type AccessibleOptions = Pick<IOptions, "childrenField" | "colorField" | "colorizer" | "dataSource" | "disabled" | "elementAttr" | "export" | "group" | "hoverEnabled" | "idField" | "interactWithGroup" | "labelField" | "layoutAlgorithm" | "layoutDirection" | "loadingIndicator" | "maxDepth" | "onClick" | "onDisposing" | "onDrawn" | "onDrill" | "onExported" | "onExporting" | "onFileSaving" | "onHoverChanged" | "onIncidentOccurred" | "onInitialized" | "onNodesInitialized" | "onNodesRendering" | "onOptionChanged" | "onSelectionChanged" | "parentField" | "pathModified" | "redrawOnResize" | "rtlEnabled" | "selectionMode" | "size" | "theme" | "tile" | "title" | "tooltip" | "valueField">;
interface DxTreeMap extends AccessibleOptions {
    readonly instance?: TreeMap;
}
declare const DxTreeMap: VueType.VueConstructor<{
    instance: TreeMap;
} & {
    childrenField: string;
    colorField: string;
    colorizer: any;
    dataSource: any;
    disabled: boolean;
    elementAttr: any;
    export: any;
    group: any;
    hoverEnabled: boolean;
    idField: string;
    interactWithGroup: boolean;
    labelField: string;
    layoutAlgorithm: TimerHandler;
    layoutDirection: string;
    loadingIndicator: any;
    maxDepth: number;
    onClick: TimerHandler;
    onDisposing: Function;
    onDrawn: Function;
    onDrill: Function;
    onExported: Function;
    onExporting: Function;
    onFileSaving: Function;
    onHoverChanged: Function;
    onIncidentOccurred: Function;
    onInitialized: Function;
    onNodesInitialized: Function;
    onNodesRendering: Function;
    onOptionChanged: Function;
    onSelectionChanged: Function;
    parentField: string;
    pathModified: boolean;
    redrawOnResize: boolean;
    rtlEnabled: boolean;
    selectionMode: string;
    size: any;
    theme: string;
    tile: any;
    title: any;
    tooltip: any;
    valueField: string;
} & VueType.default>;
declare const DxBorder: any;
declare const DxColorizer: any;
declare const DxExport: any;
declare const DxFont: any;
declare const DxFormat: any;
declare const DxGroup: any;
declare const DxGroupLabel: any;
declare const DxHoverStyle: any;
declare const DxLabel: any;
declare const DxLoadingIndicator: any;
declare const DxMargin: any;
declare const DxSelectionStyle: any;
declare const DxShadow: any;
declare const DxSize: any;
declare const DxSubtitle: any;
declare const DxTile: any;
declare const DxTileLabel: any;
declare const DxTitle: any;
declare const DxTooltip: any;
declare const DxTooltipBorder: any;
declare const DxTreeMapborder: any;
export default DxTreeMap;
export { DxTreeMap, DxBorder, DxColorizer, DxExport, DxFont, DxFormat, DxGroup, DxGroupLabel, DxHoverStyle, DxLabel, DxLoadingIndicator, DxMargin, DxSelectionStyle, DxShadow, DxSize, DxSubtitle, DxTile, DxTileLabel, DxTitle, DxTooltip, DxTooltipBorder, DxTreeMapborder };
