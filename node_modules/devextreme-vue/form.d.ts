/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import Form, { IOptions } from "devextreme/ui/form";
declare type AccessibleOptions = Pick<IOptions, "accessKey" | "activeStateEnabled" | "alignItemLabels" | "alignItemLabelsInAllGroups" | "colCount" | "colCountByScreen" | "customizeItem" | "disabled" | "elementAttr" | "focusStateEnabled" | "formData" | "height" | "hint" | "hoverStateEnabled" | "items" | "labelLocation" | "minColWidth" | "onContentReady" | "onDisposing" | "onEditorEnterKey" | "onFieldDataChanged" | "onInitialized" | "onOptionChanged" | "optionalMark" | "readOnly" | "requiredMark" | "requiredMessage" | "rtlEnabled" | "screenByWidth" | "scrollingEnabled" | "showColonAfterLabel" | "showOptionalMark" | "showRequiredMark" | "showValidationSummary" | "tabIndex" | "validationGroup" | "visible" | "width">;
interface DxForm extends AccessibleOptions {
    readonly instance?: Form;
}
declare const DxForm: VueType.VueConstructor<{
    instance: Form;
} & {
    accessKey: string;
    activeStateEnabled: boolean;
    alignItemLabels: boolean;
    alignItemLabelsInAllGroups: boolean;
    colCount: string | number;
    colCountByScreen: any;
    customizeItem: Function;
    disabled: boolean;
    elementAttr: any;
    focusStateEnabled: boolean;
    formData: any;
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    items: unknown[];
    labelLocation: string;
    minColWidth: number;
    onContentReady: Function;
    onDisposing: Function;
    onEditorEnterKey: Function;
    onFieldDataChanged: Function;
    onInitialized: Function;
    onOptionChanged: Function;
    optionalMark: string;
    readOnly: boolean;
    requiredMark: string;
    requiredMessage: string;
    rtlEnabled: boolean;
    screenByWidth: Function;
    scrollingEnabled: boolean;
    showColonAfterLabel: boolean;
    showOptionalMark: boolean;
    showRequiredMark: boolean;
    showValidationSummary: boolean;
    tabIndex: number;
    validationGroup: string;
    visible: boolean;
    width: string | number | Function;
} & VueType.default>;
declare const DxAsyncRule: any;
declare const DxButtonItem: any;
declare const DxButtonOptions: any;
declare const DxColCountByScreen: any;
declare const DxCompareRule: any;
declare const DxCustomRule: any;
declare const DxEmailRule: any;
declare const DxEmptyItem: any;
declare const DxGroupItem: any;
declare const DxItem: any;
declare const DxLabel: any;
declare const DxNumericRule: any;
declare const DxPatternRule: any;
declare const DxRangeRule: any;
declare const DxRequiredRule: any;
declare const DxSimpleItem: any;
declare const DxStringLengthRule: any;
declare const DxTab: any;
declare const DxTabbedItem: any;
declare const DxTabPanelOptions: any;
declare const DxTabPanelOptionsItem: any;
declare const DxValidationRule: any;
export default DxForm;
export { DxForm, DxAsyncRule, DxButtonItem, DxButtonOptions, DxColCountByScreen, DxCompareRule, DxCustomRule, DxEmailRule, DxEmptyItem, DxGroupItem, DxItem, DxLabel, DxNumericRule, DxPatternRule, DxRangeRule, DxRequiredRule, DxSimpleItem, DxStringLengthRule, DxTab, DxTabbedItem, DxTabPanelOptions, DxTabPanelOptionsItem, DxValidationRule };
