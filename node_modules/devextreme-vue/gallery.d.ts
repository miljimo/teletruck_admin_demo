/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import Gallery, { IOptions } from "devextreme/ui/gallery";
declare type AccessibleOptions = Pick<IOptions, "accessKey" | "animationDuration" | "animationEnabled" | "dataSource" | "disabled" | "elementAttr" | "focusStateEnabled" | "height" | "hint" | "hoverStateEnabled" | "indicatorEnabled" | "initialItemWidth" | "itemHoldTimeout" | "items" | "itemTemplate" | "loop" | "noDataText" | "onContentReady" | "onDisposing" | "onInitialized" | "onItemClick" | "onItemContextMenu" | "onItemHold" | "onItemRendered" | "onOptionChanged" | "onSelectionChanged" | "rtlEnabled" | "selectedIndex" | "selectedItem" | "showIndicator" | "showNavButtons" | "slideshowDelay" | "stretchImages" | "swipeEnabled" | "tabIndex" | "visible" | "width" | "wrapAround">;
interface DxGallery extends AccessibleOptions {
    readonly instance?: Gallery;
}
declare const DxGallery: VueType.VueConstructor<{
    instance: Gallery;
} & {
    accessKey: string;
    animationDuration: number;
    animationEnabled: boolean;
    dataSource: any;
    disabled: boolean;
    elementAttr: any;
    focusStateEnabled: boolean;
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    indicatorEnabled: boolean;
    initialItemWidth: number;
    itemHoldTimeout: number;
    items: unknown[];
    itemTemplate: unknown;
    loop: boolean;
    noDataText: string;
    onContentReady: Function;
    onDisposing: Function;
    onInitialized: Function;
    onItemClick: TimerHandler;
    onItemContextMenu: Function;
    onItemHold: Function;
    onItemRendered: Function;
    onOptionChanged: Function;
    onSelectionChanged: Function;
    rtlEnabled: boolean;
    selectedIndex: number;
    selectedItem: any;
    showIndicator: boolean;
    showNavButtons: boolean;
    slideshowDelay: number;
    stretchImages: boolean;
    swipeEnabled: boolean;
    tabIndex: number;
    visible: boolean;
    width: string | number | Function;
    wrapAround: boolean;
} & VueType.default>;
declare const DxItem: any;
export default DxGallery;
export { DxGallery, DxItem };
