/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import Drawer, { IOptions } from "devextreme/ui/drawer";
declare type AccessibleOptions = Pick<IOptions, "activeStateEnabled" | "animationDuration" | "animationEnabled" | "closeOnOutsideClick" | "disabled" | "elementAttr" | "height" | "hint" | "hoverStateEnabled" | "maxSize" | "minSize" | "onDisposing" | "onInitialized" | "onOptionChanged" | "opened" | "openedStateMode" | "position" | "revealMode" | "rtlEnabled" | "shading" | "template" | "visible" | "width">;
interface DxDrawer extends AccessibleOptions {
    readonly instance?: Drawer;
}
declare const DxDrawer: VueType.VueConstructor<{
    instance: Drawer;
} & {
    activeStateEnabled: boolean;
    animationDuration: number;
    animationEnabled: boolean;
    closeOnOutsideClick: boolean | Function;
    disabled: boolean;
    elementAttr: any;
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    maxSize: number;
    minSize: number;
    onDisposing: Function;
    onInitialized: Function;
    onOptionChanged: Function;
    opened: boolean;
    openedStateMode: string;
    position: string;
    revealMode: string;
    rtlEnabled: boolean;
    shading: boolean;
    template: unknown;
    visible: boolean;
    width: string | number | Function;
} & VueType.default>;
export default DxDrawer;
export { DxDrawer };
