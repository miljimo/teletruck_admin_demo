/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import BarGauge, { IOptions } from "devextreme/viz/bar_gauge";
declare type AccessibleOptions = Pick<IOptions, "animation" | "backgroundColor" | "barSpacing" | "baseValue" | "disabled" | "elementAttr" | "endValue" | "export" | "geometry" | "label" | "legend" | "loadingIndicator" | "margin" | "onDisposing" | "onDrawn" | "onExported" | "onExporting" | "onFileSaving" | "onIncidentOccurred" | "onInitialized" | "onOptionChanged" | "onTooltipHidden" | "onTooltipShown" | "palette" | "paletteExtensionMode" | "pathModified" | "redrawOnResize" | "relativeInnerRadius" | "resolveLabelOverlapping" | "rtlEnabled" | "size" | "startValue" | "theme" | "title" | "tooltip" | "values">;
interface DxBarGauge extends AccessibleOptions {
    readonly instance?: BarGauge;
}
declare const DxBarGauge: VueType.VueConstructor<{
    instance: BarGauge;
} & {
    animation: any;
    backgroundColor: string;
    barSpacing: number;
    baseValue: number;
    disabled: boolean;
    elementAttr: any;
    endValue: number;
    export: any;
    geometry: any;
    label: any;
    legend: any;
    loadingIndicator: any;
    margin: any;
    onDisposing: Function;
    onDrawn: Function;
    onExported: Function;
    onExporting: Function;
    onFileSaving: Function;
    onIncidentOccurred: Function;
    onInitialized: Function;
    onOptionChanged: Function;
    onTooltipHidden: Function;
    onTooltipShown: Function;
    palette: string | unknown[];
    paletteExtensionMode: string;
    pathModified: boolean;
    redrawOnResize: boolean;
    relativeInnerRadius: number;
    resolveLabelOverlapping: string;
    rtlEnabled: boolean;
    size: any;
    startValue: number;
    theme: string;
    title: any;
    tooltip: any;
    values: unknown[];
} & VueType.default>;
declare const DxAnimation: any;
declare const DxBarGaugeTitle: any;
declare const DxBarGaugeTitleSubtitle: any;
declare const DxBorder: any;
declare const DxExport: any;
declare const DxFont: any;
declare const DxFormat: any;
declare const DxGeometry: any;
declare const DxItemTextFormat: any;
declare const DxLabel: any;
declare const DxLegend: any;
declare const DxLegendBorder: any;
declare const DxLegendTitle: any;
declare const DxLegendTitleSubtitle: any;
declare const DxLoadingIndicator: any;
declare const DxMargin: any;
declare const DxShadow: any;
declare const DxSize: any;
declare const DxSubtitle: any;
declare const DxTitle: any;
declare const DxTooltip: any;
declare const DxTooltipBorder: any;
export default DxBarGauge;
export { DxBarGauge, DxAnimation, DxBarGaugeTitle, DxBarGaugeTitleSubtitle, DxBorder, DxExport, DxFont, DxFormat, DxGeometry, DxItemTextFormat, DxLabel, DxLegend, DxLegendBorder, DxLegendTitle, DxLegendTitleSubtitle, DxLoadingIndicator, DxMargin, DxShadow, DxSize, DxSubtitle, DxTitle, DxTooltip, DxTooltipBorder };
