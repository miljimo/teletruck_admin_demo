/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import TextBox, { IOptions } from "devextreme/ui/text_box";
declare type AccessibleOptions = Pick<IOptions, "accessKey" | "activeStateEnabled" | "buttons" | "disabled" | "elementAttr" | "focusStateEnabled" | "height" | "hint" | "hoverStateEnabled" | "inputAttr" | "isValid" | "mask" | "maskChar" | "maskInvalidMessage" | "maskRules" | "maxLength" | "mode" | "name" | "onChange" | "onContentReady" | "onCopy" | "onCut" | "onDisposing" | "onEnterKey" | "onFocusIn" | "onFocusOut" | "onInitialized" | "onInput" | "onKeyDown" | "onKeyUp" | "onOptionChanged" | "onPaste" | "onValueChanged" | "placeholder" | "readOnly" | "rtlEnabled" | "showClearButton" | "showMaskMode" | "spellcheck" | "stylingMode" | "tabIndex" | "text" | "useMaskedValue" | "validationError" | "validationErrors" | "validationMessageMode" | "validationStatus" | "value" | "valueChangeEvent" | "visible" | "width">;
interface DxTextBox extends AccessibleOptions {
    readonly instance?: TextBox;
}
declare const DxTextBox: VueType.VueConstructor<{
    instance: TextBox;
} & {
    accessKey: string;
    activeStateEnabled: boolean;
    buttons: unknown[];
    disabled: boolean;
    elementAttr: any;
    focusStateEnabled: boolean;
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    inputAttr: any;
    isValid: boolean;
    mask: string;
    maskChar: string;
    maskInvalidMessage: string;
    maskRules: any;
    maxLength: string | number;
    mode: string;
    name: string;
    onChange: Function;
    onContentReady: Function;
    onCopy: Function;
    onCut: Function;
    onDisposing: Function;
    onEnterKey: Function;
    onFocusIn: Function;
    onFocusOut: Function;
    onInitialized: Function;
    onInput: Function;
    onKeyDown: Function;
    onKeyUp: Function;
    onOptionChanged: Function;
    onPaste: Function;
    onValueChanged: Function;
    placeholder: string;
    readOnly: boolean;
    rtlEnabled: boolean;
    showClearButton: boolean;
    showMaskMode: string;
    spellcheck: boolean;
    stylingMode: string;
    tabIndex: number;
    text: string;
    useMaskedValue: boolean;
    validationError: any;
    validationErrors: unknown[];
    validationMessageMode: string;
    validationStatus: string;
    value: string;
    valueChangeEvent: string;
    visible: boolean;
    width: string | number | Function;
} & VueType.default>;
declare const DxButton: any;
declare const DxOptions: any;
export default DxTextBox;
export { DxTextBox, DxButton, DxOptions };
