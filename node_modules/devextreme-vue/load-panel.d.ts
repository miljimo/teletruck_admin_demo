/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import LoadPanel, { IOptions } from "devextreme/ui/load_panel";
declare type AccessibleOptions = Pick<IOptions, "animation" | "closeOnOutsideClick" | "container" | "deferRendering" | "delay" | "elementAttr" | "focusStateEnabled" | "height" | "hint" | "hoverStateEnabled" | "indicatorSrc" | "maxHeight" | "maxWidth" | "message" | "minHeight" | "minWidth" | "onContentReady" | "onDisposing" | "onHidden" | "onHiding" | "onInitialized" | "onOptionChanged" | "onShowing" | "onShown" | "position" | "rtlEnabled" | "shading" | "shadingColor" | "showIndicator" | "showPane" | "visible" | "width">;
interface DxLoadPanel extends AccessibleOptions {
    readonly instance?: LoadPanel;
}
declare const DxLoadPanel: VueType.VueConstructor<{
    instance: LoadPanel;
} & {
    animation: any;
    closeOnOutsideClick: boolean | Function;
    container: unknown;
    deferRendering: boolean;
    delay: number;
    elementAttr: any;
    focusStateEnabled: boolean;
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    indicatorSrc: string;
    maxHeight: string | number | Function;
    maxWidth: string | number | Function;
    message: string;
    minHeight: string | number | Function;
    minWidth: string | number | Function;
    onContentReady: Function;
    onDisposing: Function;
    onHidden: Function;
    onHiding: Function;
    onInitialized: Function;
    onOptionChanged: Function;
    onShowing: Function;
    onShown: Function;
    position: any;
    rtlEnabled: boolean;
    shading: boolean;
    shadingColor: string;
    showIndicator: boolean;
    showPane: boolean;
    visible: boolean;
    width: string | number | Function;
} & VueType.default>;
declare const DxAnimation: any;
declare const DxAt: any;
declare const DxBoundaryOffset: any;
declare const DxCollision: any;
declare const DxHide: any;
declare const DxMy: any;
declare const DxOffset: any;
declare const DxPosition: any;
declare const DxShow: any;
export default DxLoadPanel;
export { DxLoadPanel, DxAnimation, DxAt, DxBoundaryOffset, DxCollision, DxHide, DxMy, DxOffset, DxPosition, DxShow };
