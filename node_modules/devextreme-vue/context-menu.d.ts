/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import ContextMenu, { IOptions } from "devextreme/ui/context_menu";
declare type AccessibleOptions = Pick<IOptions, "accessKey" | "activeStateEnabled" | "animation" | "closeOnOutsideClick" | "cssClass" | "dataSource" | "disabled" | "disabledExpr" | "displayExpr" | "elementAttr" | "focusStateEnabled" | "height" | "hint" | "hoverStateEnabled" | "items" | "itemsExpr" | "itemTemplate" | "onContentReady" | "onDisposing" | "onHidden" | "onHiding" | "onInitialized" | "onItemClick" | "onItemContextMenu" | "onItemRendered" | "onOptionChanged" | "onPositioning" | "onSelectionChanged" | "onShowing" | "onShown" | "position" | "rtlEnabled" | "selectByClick" | "selectedExpr" | "selectedItem" | "selectionMode" | "showEvent" | "showSubmenuMode" | "submenuDirection" | "tabIndex" | "target" | "visible" | "width">;
interface DxContextMenu extends AccessibleOptions {
    readonly instance?: ContextMenu;
}
declare const DxContextMenu: VueType.VueConstructor<{
    instance: ContextMenu;
} & {
    accessKey: string;
    activeStateEnabled: boolean;
    animation: any;
    closeOnOutsideClick: boolean | Function;
    cssClass: string;
    dataSource: any;
    disabled: boolean;
    disabledExpr: TimerHandler;
    displayExpr: TimerHandler;
    elementAttr: any;
    focusStateEnabled: boolean;
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    items: unknown[];
    itemsExpr: TimerHandler;
    itemTemplate: unknown;
    onContentReady: Function;
    onDisposing: Function;
    onHidden: Function;
    onHiding: Function;
    onInitialized: Function;
    onItemClick: TimerHandler;
    onItemContextMenu: Function;
    onItemRendered: Function;
    onOptionChanged: Function;
    onPositioning: Function;
    onSelectionChanged: Function;
    onShowing: Function;
    onShown: Function;
    position: any;
    rtlEnabled: boolean;
    selectByClick: boolean;
    selectedExpr: TimerHandler;
    selectedItem: any;
    selectionMode: string;
    showEvent: any;
    showSubmenuMode: any;
    submenuDirection: string;
    tabIndex: number;
    target: unknown;
    visible: boolean;
    width: string | number | Function;
} & VueType.default>;
declare const DxAnimation: any;
declare const DxAt: any;
declare const DxBoundaryOffset: any;
declare const DxCollision: any;
declare const DxDelay: any;
declare const DxHide: any;
declare const DxItem: any;
declare const DxMy: any;
declare const DxOffset: any;
declare const DxPosition: any;
declare const DxShow: any;
declare const DxShowEvent: any;
declare const DxShowSubmenuMode: any;
export default DxContextMenu;
export { DxContextMenu, DxAnimation, DxAt, DxBoundaryOffset, DxCollision, DxDelay, DxHide, DxItem, DxMy, DxOffset, DxPosition, DxShow, DxShowEvent, DxShowSubmenuMode };
