/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import FileManager, { IOptions } from "devextreme/ui/file_manager";
declare type AccessibleOptions = Pick<IOptions, "accessKey" | "activeStateEnabled" | "allowedFileExtensions" | "contextMenu" | "currentPath" | "currentPathKeys" | "customizeDetailColumns" | "customizeThumbnail" | "disabled" | "elementAttr" | "fileSystemProvider" | "focusedItemKey" | "focusStateEnabled" | "height" | "hint" | "hoverStateEnabled" | "itemView" | "onContentReady" | "onContextMenuItemClick" | "onCurrentDirectoryChanged" | "onDisposing" | "onErrorOccurred" | "onFocusedItemChanged" | "onInitialized" | "onOptionChanged" | "onSelectedFileOpened" | "onSelectionChanged" | "onToolbarItemClick" | "permissions" | "rootFolderName" | "rtlEnabled" | "selectedItemKeys" | "selectionMode" | "tabIndex" | "toolbar" | "upload" | "visible" | "width">;
interface DxFileManager extends AccessibleOptions {
    readonly instance?: FileManager;
}
declare const DxFileManager: VueType.VueConstructor<{
    instance: FileManager;
} & {
    accessKey: string;
    activeStateEnabled: boolean;
    allowedFileExtensions: unknown[];
    contextMenu: any;
    currentPath: string;
    currentPathKeys: unknown[];
    customizeDetailColumns: Function;
    customizeThumbnail: Function;
    disabled: boolean;
    elementAttr: any;
    fileSystemProvider: any;
    focusedItemKey: string;
    focusStateEnabled: boolean;
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    itemView: any;
    onContentReady: Function;
    onContextMenuItemClick: Function;
    onCurrentDirectoryChanged: Function;
    onDisposing: Function;
    onErrorOccurred: Function;
    onFocusedItemChanged: Function;
    onInitialized: Function;
    onOptionChanged: Function;
    onSelectedFileOpened: Function;
    onSelectionChanged: Function;
    onToolbarItemClick: Function;
    permissions: any;
    rootFolderName: string;
    rtlEnabled: boolean;
    selectedItemKeys: unknown[];
    selectionMode: string;
    tabIndex: number;
    toolbar: any;
    upload: any;
    visible: boolean;
    width: string | number | Function;
} & VueType.default>;
declare const DxColumn: any;
declare const DxContextMenu: any;
declare const DxContextMenuItem: any;
declare const DxDetails: any;
declare const DxFileSelectionItem: any;
declare const DxItem: any;
declare const DxItemView: any;
declare const DxPermissions: any;
declare const DxToolbar: any;
declare const DxToolbarItem: any;
declare const DxUpload: any;
export default DxFileManager;
export { DxFileManager, DxColumn, DxContextMenu, DxContextMenuItem, DxDetails, DxFileSelectionItem, DxItem, DxItemView, DxPermissions, DxToolbar, DxToolbarItem, DxUpload };
