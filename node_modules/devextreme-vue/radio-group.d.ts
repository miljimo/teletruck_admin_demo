/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import RadioGroup, { IOptions } from "devextreme/ui/radio_group";
declare type AccessibleOptions = Pick<IOptions, "accessKey" | "activeStateEnabled" | "dataSource" | "disabled" | "displayExpr" | "elementAttr" | "focusStateEnabled" | "height" | "hint" | "hoverStateEnabled" | "isValid" | "items" | "itemTemplate" | "layout" | "name" | "onContentReady" | "onDisposing" | "onInitialized" | "onOptionChanged" | "onValueChanged" | "readOnly" | "rtlEnabled" | "tabIndex" | "validationError" | "validationErrors" | "validationMessageMode" | "validationStatus" | "value" | "valueExpr" | "visible" | "width">;
interface DxRadioGroup extends AccessibleOptions {
    readonly instance?: RadioGroup;
}
declare const DxRadioGroup: VueType.VueConstructor<{
    instance: RadioGroup;
} & {
    accessKey: string;
    activeStateEnabled: boolean;
    dataSource: any;
    disabled: boolean;
    displayExpr: TimerHandler;
    elementAttr: any;
    focusStateEnabled: boolean;
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    isValid: boolean;
    items: unknown[];
    itemTemplate: unknown;
    layout: string;
    name: string;
    onContentReady: Function;
    onDisposing: Function;
    onInitialized: Function;
    onOptionChanged: Function;
    onValueChanged: Function;
    readOnly: boolean;
    rtlEnabled: boolean;
    tabIndex: number;
    validationError: any;
    validationErrors: unknown[];
    validationMessageMode: string;
    validationStatus: string;
    value: unknown;
    valueExpr: TimerHandler;
    visible: boolean;
    width: string | number | Function;
} & VueType.default>;
declare const DxItem: any;
export default DxRadioGroup;
export { DxRadioGroup, DxItem };
