/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import ScrollView, { IOptions } from "devextreme/ui/scroll_view";
declare type AccessibleOptions = Pick<IOptions, "bounceEnabled" | "direction" | "disabled" | "elementAttr" | "height" | "onDisposing" | "onInitialized" | "onOptionChanged" | "onPullDown" | "onReachBottom" | "onScroll" | "onUpdated" | "pulledDownText" | "pullingDownText" | "reachBottomText" | "refreshingText" | "rtlEnabled" | "scrollByContent" | "scrollByThumb" | "showScrollbar" | "useNative" | "width">;
interface DxScrollView extends AccessibleOptions {
    readonly instance?: ScrollView;
}
declare const DxScrollView: VueType.VueConstructor<{
    instance: ScrollView;
} & {
    bounceEnabled: boolean;
    direction: string;
    disabled: boolean;
    elementAttr: any;
    height: string | number | Function;
    onDisposing: Function;
    onInitialized: Function;
    onOptionChanged: Function;
    onPullDown: Function;
    onReachBottom: Function;
    onScroll: Function;
    onUpdated: Function;
    pulledDownText: string;
    pullingDownText: string;
    reachBottomText: string;
    refreshingText: string;
    rtlEnabled: boolean;
    scrollByContent: boolean;
    scrollByThumb: boolean;
    showScrollbar: string;
    useNative: boolean;
    width: string | number | Function;
} & VueType.default>;
export default DxScrollView;
export { DxScrollView };
