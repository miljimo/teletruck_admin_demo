/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var VueType = require("vue");
var Vue = VueType.default || VueType;
var draggable_1 = require("devextreme/ui/draggable");
var component_1 = require("./core/component");
var configuration_component_1 = require("./core/configuration-component");
var DxDraggable = Vue.extend({
    extends: component_1.DxComponent,
    props: {
        autoScroll: Boolean,
        boundary: {},
        clone: Boolean,
        container: {},
        cursorOffset: [Object, String],
        data: {},
        dragDirection: String,
        dragTemplate: {},
        elementAttr: Object,
        group: String,
        handle: String,
        height: [Function, Number, String],
        onDisposing: Function,
        onDragEnd: Function,
        onDragMove: Function,
        onDragStart: Function,
        onInitialized: Function,
        onOptionChanged: Function,
        rtlEnabled: Boolean,
        scrollSensitivity: Number,
        scrollSpeed: Number,
        width: [Function, Number, String]
    },
    computed: {
        instance: function () {
            return this.$_instance;
        }
    },
    beforeCreate: function () {
        this.$_WidgetClass = draggable_1.default;
        this.$_expectedChildren = {
            cursorOffset: { isCollectionItem: false, optionName: "cursorOffset" }
        };
    }
});
exports.DxDraggable = DxDraggable;
var DxCursorOffset = Vue.extend({
    extends: configuration_component_1.DxConfiguration,
    props: {
        x: Number,
        y: Number
    }
});
exports.DxCursorOffset = DxCursorOffset;
DxCursorOffset.$_optionName = "cursorOffset";
exports.default = DxDraggable;
