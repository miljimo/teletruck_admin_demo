/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import FilterBuilder, { IOptions } from "devextreme/ui/filter_builder";
declare type AccessibleOptions = Pick<IOptions, "accessKey" | "activeStateEnabled" | "allowHierarchicalFields" | "customOperations" | "disabled" | "elementAttr" | "fields" | "filterOperationDescriptions" | "focusStateEnabled" | "groupOperationDescriptions" | "groupOperations" | "height" | "hint" | "hoverStateEnabled" | "maxGroupLevel" | "onContentReady" | "onDisposing" | "onEditorPrepared" | "onEditorPreparing" | "onInitialized" | "onOptionChanged" | "onValueChanged" | "rtlEnabled" | "tabIndex" | "value" | "visible" | "width">;
interface DxFilterBuilder extends AccessibleOptions {
    readonly instance?: FilterBuilder;
}
declare const DxFilterBuilder: VueType.VueConstructor<{
    instance: FilterBuilder;
} & {
    accessKey: string;
    activeStateEnabled: boolean;
    allowHierarchicalFields: boolean;
    customOperations: unknown[];
    disabled: boolean;
    elementAttr: any;
    fields: unknown[];
    filterOperationDescriptions: any;
    focusStateEnabled: boolean;
    groupOperationDescriptions: any;
    groupOperations: unknown[];
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    maxGroupLevel: number;
    onContentReady: Function;
    onDisposing: Function;
    onEditorPrepared: Function;
    onEditorPreparing: Function;
    onInitialized: Function;
    onOptionChanged: Function;
    onValueChanged: Function;
    rtlEnabled: boolean;
    tabIndex: number;
    value: string | Function | unknown[];
    visible: boolean;
    width: string | number | Function;
} & VueType.default>;
declare const DxCustomOperation: any;
declare const DxField: any;
declare const DxFilterOperationDescriptions: any;
declare const DxFormat: any;
declare const DxGroupOperationDescriptions: any;
declare const DxLookup: any;
export default DxFilterBuilder;
export { DxFilterBuilder, DxCustomOperation, DxField, DxFilterOperationDescriptions, DxFormat, DxGroupOperationDescriptions, DxLookup };
