/*!
 * devextreme-vue
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import * as VueType from "vue";
import TreeView, { IOptions } from "devextreme/ui/tree_view";
declare type AccessibleOptions = Pick<IOptions, "accessKey" | "activeStateEnabled" | "animationEnabled" | "createChildren" | "dataSource" | "dataStructure" | "disabled" | "disabledExpr" | "displayExpr" | "elementAttr" | "expandAllEnabled" | "expandedExpr" | "expandEvent" | "expandNodesRecursive" | "focusStateEnabled" | "hasItemsExpr" | "height" | "hint" | "hoverStateEnabled" | "itemHoldTimeout" | "items" | "itemsExpr" | "itemTemplate" | "keyExpr" | "noDataText" | "onContentReady" | "onDisposing" | "onInitialized" | "onItemClick" | "onItemCollapsed" | "onItemContextMenu" | "onItemExpanded" | "onItemHold" | "onItemRendered" | "onItemSelectionChanged" | "onOptionChanged" | "onSelectAllValueChanged" | "onSelectionChanged" | "parentIdExpr" | "rootValue" | "rtlEnabled" | "scrollDirection" | "searchEditorOptions" | "searchEnabled" | "searchExpr" | "searchMode" | "searchTimeout" | "searchValue" | "selectAllText" | "selectByClick" | "selectedExpr" | "selectionMode" | "selectNodesRecursive" | "showCheckBoxesMode" | "tabIndex" | "virtualModeEnabled" | "visible" | "width">;
interface DxTreeView extends AccessibleOptions {
    readonly instance?: TreeView;
}
declare const DxTreeView: VueType.VueConstructor<{
    instance: TreeView;
} & {
    accessKey: string;
    activeStateEnabled: boolean;
    animationEnabled: boolean;
    createChildren: Function;
    dataSource: any;
    dataStructure: string;
    disabled: boolean;
    disabledExpr: TimerHandler;
    displayExpr: TimerHandler;
    elementAttr: any;
    expandAllEnabled: boolean;
    expandedExpr: TimerHandler;
    expandEvent: string;
    expandNodesRecursive: boolean;
    focusStateEnabled: boolean;
    hasItemsExpr: TimerHandler;
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    itemHoldTimeout: number;
    items: unknown[];
    itemsExpr: TimerHandler;
    itemTemplate: unknown;
    keyExpr: TimerHandler;
    noDataText: string;
    onContentReady: Function;
    onDisposing: Function;
    onInitialized: Function;
    onItemClick: Function;
    onItemCollapsed: Function;
    onItemContextMenu: Function;
    onItemExpanded: Function;
    onItemHold: Function;
    onItemRendered: Function;
    onItemSelectionChanged: Function;
    onOptionChanged: Function;
    onSelectAllValueChanged: Function;
    onSelectionChanged: Function;
    parentIdExpr: TimerHandler;
    rootValue: unknown;
    rtlEnabled: boolean;
    scrollDirection: string;
    searchEditorOptions: any;
    searchEnabled: boolean;
    searchExpr: string | Function | unknown[];
    searchMode: string;
    searchTimeout: number;
    searchValue: string;
    selectAllText: string;
    selectByClick: boolean;
    selectedExpr: TimerHandler;
    selectionMode: string;
    selectNodesRecursive: boolean;
    showCheckBoxesMode: string;
    tabIndex: number;
    virtualModeEnabled: boolean;
    visible: boolean;
    width: string | number | Function;
} & VueType.default>;
declare const DxButton: any;
declare const DxItem: any;
declare const DxOptions: any;
declare const DxSearchEditorOptions: any;
export default DxTreeView;
export { DxTreeView, DxButton, DxItem, DxOptions, DxSearchEditorOptions };
